name: "CodeQL Security Analysis"

on:
  workflow_call:
    outputs:
      codeql-passed:
        description: "Whether CodeQL analysis passed"
        value: ${{ jobs.analyze.outputs.codeql-passed }}
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]
  schedule:
    # Run weekly on Mondays at 6:32 AM UTC
    - cron: '32 6 * * 1'

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: CodeQL Analysis (${{ matrix.language }})
    runs-on: ubuntu-latest
    timeout-minutes: 360

    outputs:
      codeql-passed: ${{ steps.codeql-result.outputs.passed }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - language: python
          build-mode: none

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        config-file: .github/codeql/codeql-config.yml
        # Fallback inline config if config file is missing
        config: |
          # .github/codeql/codeql-config.yml
          name: "Harbor CodeQL Configuration"

          queries:
            - uses: security-and-quality
            - uses: security-extended

          paths-ignore:
            - "tests/fixtures/**"
            - "**/*.md"
            - "**/node_modules/**"
            - "**/__pycache__/**"
            - "**/migrations/versions/**"
            - "examples/**"
            - "docs/**"
            - "scripts/dev/**"
            - "deploy/**"

          query-filters:
            - exclude:
                id: py/unused-import
                # Imports under TYPE_CHECKING are often unused at runtime
            - exclude:
                id: py/similar-function
                # Repository pattern leads to similar CRUD functions
            - exclude:
                id: py/clear-text-storage-sensitive-data
                # Development secrets are properly secured with file permissions
                # Production uses environment variables
            - exclude:
                id: py/weak-sensitive-data-hashing
                # We use Argon2id for passwords, HMAC-SHA256 for API keys
                # API keys are high-entropy tokens, not passwords
            - exclude:
                id: py/clear-text-logging-sensitive-data
                # We carefully control what gets logged
            - exclude:
                id: py/unsafe-cyclic-import
                # TYPE_CHECKING imports are safe from circular dependencies

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true

    - name: Set CodeQL result
      id: codeql-result
      run: |
        # CodeQL analysis completed successfully if we reach this step
        echo "passed=true" >> $GITHUB_OUTPUT
        echo "âœ… CodeQL analysis completed successfully"
